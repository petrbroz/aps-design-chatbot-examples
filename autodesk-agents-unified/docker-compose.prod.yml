# Docker Compose for Autodesk Agents Unified - Production
version: '3.8'

services:
  # Main application service
  agents-unified:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - AGENT_CONFIG_PATH=/app/config/production.yaml
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - OPENSEARCH_ENDPOINT=${OPENSEARCH_ENDPOINT}
      - CACHE_DIRECTORY=/app/cache
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - AUTH_ENABLED=${AUTH_ENABLED:-true}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID}
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-60}
    volumes:
      - cache_data:/app/cache
      - logs_data:/app/logs
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - agents-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - agents-unified
    networks:
      - agents-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Log aggregation
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    volumes:
      - ./fluentd.conf:/fluentd/etc/fluent.conf:ro
      - logs_data:/var/log
    ports:
      - "24224:24224"
    networks:
      - agents-network
    deploy:
      replicas: 1

volumes:
  cache_data:
  logs_data:

networks:
  agents-network:
    driver: overlay
    attachable: true